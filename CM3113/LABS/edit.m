% EDITSPECT - edit the amplitude spectrum of an image
%
% Remove periodic interference patterns in an image.
%
% This function allows one to edit the amplitude spectrum of an image by
% `blacking out' points in the spectrum with the mouse.  The main
% application of this function is to remove periodic interference patterns
% in an image.  These interference patterns typically show up a bright
% points in the amplitude spectrum of the image.  If these bright points in
% the spectrum are removed and then the image reconstructed, hopefully the
% interference pattern will be removed.
%
% Usage:  newim = edit(im, rad)
%
% Arguments:   im   - The image to be processed.
%              rad  - The standard deviation (in pixels) of the Gaussian
%                     blackout spot generated by a mouse click.
%                     (A typical value is in the range 5-20)
%
% Returns:  newim   - The image reconstructed with the new amplitude
%                     spectrum.
%
% Note: To simplify the code there is a restriction that it is not possible
% to place blackout spots less than 2*rad from the image boundary.

% Peter Kovesi
% Department of Computer Science & Software Engineering
% The University of Western Australia
% October 2000

function newim = edit(im, rad)
    
    if ndims(im) == 3
	error('Sorry this function only works on grey-scale images (at present)');
    end
    
    sze = 4*fix(rad) + 1;
    sze2 = fix(sze/2);
    f =  fspecial('gaussian',[sze sze], rad);  % Filter is a 'high-pass
    f = f - min(min(f));                       % Gaussian'
    f = 1.0 - f/max(max(f));

    show(im,1); title('Original Image');

    IM = fft2(im);            % FFT of image.
    IMmag = abs(IM);          % Magnitude and phase spectra.
    IMph = IM./IMmag;
    [rows, cols] = size(IM);

    IMmag = fftshift(IMmag);
    show(log(IMmag+1),2); title('Amplitude Spectrum');
    
    fprintf('''Black out'' points within the spectrum by clicking with ');
    fprintf('the left mouse button\n');
    fprintf('Last point is indicated by clicking with any other mouse button\n');

    but = 1;    
    while but==1
	[xp,yp,but] = ginput(1);       % Get digitised point 

	% Black out this point by generating high-pass filter centred
	% on x y and multiplying the filter with the amplitude spectrum.
	
	xp = round(xp); yp = round(yp);
	xp = max(sze2+1,xp); xp = min(cols-sze2,xp); % Constrain position of spot
	yp = max(sze2+1,yp); yp = min(rows-sze2,yp);
	
	rmin = yp-sze2; rmax = yp+sze2;
	cmin = xp-sze2; cmax = xp+sze2;
	
	IMmag(rmin:rmax,cmin:cmax) = IMmag(rmin:rmax,cmin:cmax).*f;
	
	show(log(IMmag+1),2); title('Amplitude Spectrum');
    end
    
    newim = real(ifft2(fftshift(IMmag) .* IMph));  % Reconstruct the image
    
    show(newim,3); title('Reconstructed Image');
    
